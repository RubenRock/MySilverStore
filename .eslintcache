[{"E:\\07R45\\otros\\React\\React\\mysilver\\src\\index.js":"1","E:\\07R45\\otros\\React\\React\\mysilver\\src\\App.js":"2","E:\\07R45\\otros\\React\\React\\mysilver\\src\\reportWebVitals.js":"3","D:\\Programacion\\React\\MySilverStore\\src\\index.js":"4","D:\\Programacion\\React\\MySilverStore\\src\\reportWebVitals.js":"5","D:\\Programacion\\React\\MySilverStore\\src\\App.js":"6","D:\\Programacion\\React\\mysilverstore\\src\\index.js":"7","D:\\Programacion\\React\\mysilverstore\\src\\reportWebVitals.js":"8","D:\\Programacion\\React\\mysilverstore\\src\\App.js":"9","D:\\Programacion\\React\\mysilverstore\\src\\components\\firebase\\conexionFirestore.js":"10","D:\\Programacion\\React\\mysilverstore\\src\\components\\firebase\\configFirestore.js":"11","D:\\Programacion\\React\\mysilverstore\\src\\components\\listaProductos.js":"12","D:\\Programacion\\React\\mysilverstore\\src\\components\\modal.js":"13","D:\\Programacion\\React\\mysilverstore\\src\\components\\navbar\\navbar.jsx":"14","D:\\Programacion\\React\\mysilverstore\\src\\components\\administrador.jsx":"15","E:\\07R45\\otros\\React\\React\\mysilver\\src\\components\\listaProductos.js":"16","E:\\07R45\\otros\\React\\React\\mysilver\\src\\components\\administrador.jsx":"17","E:\\07R45\\otros\\React\\React\\mysilver\\src\\components\\navbar\\navbar.jsx":"18","E:\\07R45\\otros\\React\\React\\mysilver\\src\\components\\firebase\\conexionFirestore.js":"19","E:\\07R45\\otros\\React\\React\\mysilver\\src\\components\\firebase\\configFirestore.js":"20","E:\\07R45\\otros\\React\\React\\mysilver\\src\\components\\modal.js":"21","E:\\07R45\\otros\\React\\React\\mysilver\\src\\components\\dialog.js":"22","D:\\Programacion\\React\\mysilverstore\\src\\components\\dialog.js":"23","D:\\Programacion\\React\\mysilverstore\\src\\components\\carrusel\\SliderData.js":"24","D:\\Programacion\\React\\mysilverstore\\src\\components\\carrusel\\ImageSlider.js":"25","E:\\07R45\\otros\\React\\React\\mysilver\\src\\components\\carrusel\\SliderData.js":"26","E:\\07R45\\otros\\React\\React\\mysilver\\src\\components\\carrusel\\ImageSlider.js":"27"},{"size":500,"mtime":499162500000,"results":"28","hashOfConfig":"29"},{"size":2525,"mtime":1618508927240,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":517,"mtime":1612444391756,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1612444391865,"results":"34","hashOfConfig":"33"},{"size":950,"mtime":1612447643623,"results":"35","hashOfConfig":"33"},{"size":517,"mtime":1612444391756,"results":"36","hashOfConfig":"37"},{"size":375,"mtime":1612444391865,"results":"38","hashOfConfig":"37"},{"size":2589,"mtime":1619443695428,"results":"39","hashOfConfig":"37"},{"size":4364,"mtime":1618624715210,"results":"40","hashOfConfig":"37"},{"size":782,"mtime":1613481091339,"results":"41","hashOfConfig":"37"},{"size":3633,"mtime":1616076509753,"results":"42","hashOfConfig":"37"},{"size":9603,"mtime":1614863102045,"results":"43","hashOfConfig":"37"},{"size":9238,"mtime":1618321221174,"results":"44","hashOfConfig":"37"},{"size":13564,"mtime":1618838898612,"results":"45","hashOfConfig":"37"},{"size":3633,"mtime":1618508927991,"results":"46","hashOfConfig":"29"},{"size":13875,"mtime":1618600448624,"results":"47","hashOfConfig":"29"},{"size":9238,"mtime":1618508927993,"results":"48","hashOfConfig":"29"},{"size":4366,"mtime":1618599250399,"results":"49","hashOfConfig":"29"},{"size":782,"mtime":1613481091339,"results":"50","hashOfConfig":"29"},{"size":9603,"mtime":1614792599984,"results":"51","hashOfConfig":"29"},{"size":12076,"mtime":1618508927956,"results":"52","hashOfConfig":"29"},{"size":12076,"mtime":1617888911097,"results":"53","hashOfConfig":"37"},{"size":983,"mtime":1617377115040,"results":"54","hashOfConfig":"37"},{"size":2274,"mtime":1618628509770,"results":"55","hashOfConfig":"37"},{"size":983,"mtime":1618508927673,"results":"56","hashOfConfig":"29"},{"size":1739,"mtime":1618508927671,"results":"57","hashOfConfig":"29"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"34mgii",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18wyagi",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"omovn1",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"73"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"73"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"73"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\07R45\\otros\\React\\React\\mysilver\\src\\index.js",[],["118","119"],"E:\\07R45\\otros\\React\\React\\mysilver\\src\\App.js",[],"E:\\07R45\\otros\\React\\React\\mysilver\\src\\reportWebVitals.js",[],"D:\\Programacion\\React\\MySilverStore\\src\\index.js",[],"D:\\Programacion\\React\\MySilverStore\\src\\reportWebVitals.js",[],"D:\\Programacion\\React\\MySilverStore\\src\\App.js",["120"],"D:\\Programacion\\React\\mysilverstore\\src\\index.js",[],["121","122"],"D:\\Programacion\\React\\mysilverstore\\src\\reportWebVitals.js",[],"D:\\Programacion\\React\\mysilverstore\\src\\App.js",[],"D:\\Programacion\\React\\mysilverstore\\src\\components\\firebase\\conexionFirestore.js",[],"D:\\Programacion\\React\\mysilverstore\\src\\components\\firebase\\configFirestore.js",[],"D:\\Programacion\\React\\mysilverstore\\src\\components\\listaProductos.js",[],"D:\\Programacion\\React\\mysilverstore\\src\\components\\modal.js",[],["123","124"],"D:\\Programacion\\React\\mysilverstore\\src\\components\\navbar\\navbar.jsx",[],"D:\\Programacion\\React\\mysilverstore\\src\\components\\administrador.jsx",["125","126"],"import {useState} from 'react'\r\nimport {Button} from '@material-ui/core/';\r\nimport {subirNube, descargarNube, subirCarrusel, descargarCarrusel,eliminarCarrusel} from './firebase/conexionFirestore'\r\nimport add from '../img/add.svg' \r\nimport carrusel_svg from '../img/add_carrusel.svg'\r\nimport { v1 as uuidv1} from 'uuid' //generador de id\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Dialog from './dialog'\r\n\r\nfunction Administrador() {\r\n    const [articulo, setArticulo] = useState({clave:uuidv1(), titulo:'', descripcion:'',precio:'', foto:'',fotos:{}})\r\n    const [accion, setAccion] = useState('menu')    \r\n    const [openDialog, setOpenDialog] = useState(false)\r\n    const [actualizarProducto, setActualizarProducto] = useState({titulo:'',data:''})//datos para mandar al modal para modificar o elimnar\r\n    const [carrusel, SetCarrusel] = useState({direccion:'', nombre:''}) //datos del banner\r\n    const [listaCarrusel, setListaCarrusel] = useState([]) // carrusel descargado de la nube   \r\n    const [productos, setProductos] = useState([])//lista de productos original\r\n    const [productosFiltrados, setProductosFiltrados] = useState([])//lista de productos para filtrar y mostrar en pantalla\r\n    const [carga, setCarga] = useState(false)\r\n   \r\n\r\n    const filtrarProductos = (text) =>{\r\n        setProductosFiltrados(productos.filter((x)=> String(x.titulo).includes(text)))\r\n    }\r\n    \r\n    const descargarProductos = async() => {  //muestra el listado de productos  \r\n        let resul = await descargarNube()    \r\n        setProductos(resul)\r\n        setProductosFiltrados(resul)\r\n        setCarga(true)            \r\n      }\r\n\r\n    const descargaCarrusel = async() =>{\r\n        let resul = await descargarCarrusel()       \r\n        setListaCarrusel(resul)\r\n        setCarga(true)          \r\n    }\r\n\r\n    const agregarCarrusel = () =>{ //agregamos una foto al carrusel              \r\n        subirCarrusel(carrusel)\r\n        SetCarrusel({direccion:'', nombre:''})\r\n        setCarga(false)  //actualizar la lista de banners\r\n        descargaCarrusel()\r\n    }\r\n\r\n    const handleArticulo = (dato) =>{        \r\n        //let union = Object.assign(articulo,dato)// = {...articulo,...dato}             \r\n        setArticulo({...articulo,...dato})        \r\n    }        \r\n\r\n    const agregarArticulo = () => {\r\n        subirNube([articulo])\r\n        handleArticulo({clave:uuidv1(), titulo:'', descripcion:'',precio:'', foto:''}) //limpiar pantalla\r\n    }\r\n\r\n    const handleModal = (data,titulo) =>{        \r\n        setActualizarProducto({data:data,titulo:titulo})\r\n        /* setOpenModal(!openModal) */\r\n        setOpenDialog(true)\r\n\r\n    }\r\n\r\n    function Acciones_articulos() {\r\n        return (\r\n        <>\r\n            <p >Articulos</p>\r\n            \r\n            <Button style={{background:'#5f27cd',color:'white',width:280, marginBottom:25}}\r\n            onClick={() => setAccion('agregar')}>Agregar</Button>        \r\n\r\n            <Button style={{background:'#ff9f43',color:'white',width:280, marginBottom:25}}\r\n            onClick={() => {\r\n                descargarProductos()\r\n                setAccion('modificar')}                \r\n                }>modificar</Button>\r\n\r\n            <Button style={{background:'#ee5253',color:'white',width:280}}\r\n             onClick={() => {\r\n                descargarProductos()\r\n                setAccion('eliminar')}                \r\n                }>Eliminar</Button>            \r\n             \r\n        </>\r\n        )\r\n      }\r\n      \r\n\r\n      function Acciones_carrusel() {\r\n        return (\r\n        <>\r\n            <p style={{marginTop:50}}> Carrusel de fotos</p>                            \r\n\r\n            <Button style={{background:'#ff9f43',color:'white',width:280, marginBottom:25}}\r\n            onClick={() => {\r\n                descargaCarrusel()\r\n                setAccion('carrusel')}                \r\n                }>Actualizar</Button>\r\n        </>\r\n        )\r\n      }\r\n\r\n    const vistaMenu = (\r\n        <div className='administrador_vistamenu'>\r\n            <Acciones_articulos/>\r\n            <Acciones_carrusel/>\r\n        </div>\r\n    )\r\n                \r\n    const vistaAgregar = (\r\n        <div className='administrador_vistaagregar'>  \r\n            <img src={add} alt=\"add\" style={{marginTop:100}} className='administrador_img '/>           \r\n            <div className='administrador_vistamenu administrador_tamañoMenu'>\r\n                <p style={{fontSize:30}}> Pon la descripción necesaria</p>\r\n                <div className='administrador_separacion'>\r\n                    <input placeholder='Clave del artículo' id='clave' disabled className='administrador_input' value={articulo.clave} ></input>\r\n                    <input placeholder='Título del artículo' id='titulo'  className='administrador_input' value={articulo.titulo} autoComplete=\"off\" onChange={(text) => handleArticulo({titulo:text.target.value})} ></input>\r\n                    <textarea placeholder='Descripción del artículo' id='descripcion'  className='administrador_input'  onChange={(text) => handleArticulo({descripcion:text.target.value})} value={articulo.descripcion}></textarea>\r\n                    <input placeholder='Precio del artículo' id='precio'  className='administrador_input' value={articulo.precio} autoComplete=\"off\" onChange={(text) => handleArticulo({precio:text.target.value})}></input>\r\n                    <textarea placeholder='Foto del artículo' id='Foto'  className='administrador_input' value={articulo.foto} onChange={(text) => handleArticulo({foto:text.target.value})}></textarea>\r\n                </div>            \r\n\r\n                <div >\r\n                    <Button style={{background:'grey',color:'white',marginRight:10}}\r\n                    onClick={() => setAccion('menu')}>Menu</Button>\r\n                        \r\n                    <Button style={{background:'blue',color:'white'}} \r\n                    onClick= {() => agregarArticulo()}>Aceptar</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const MostrarProductos = ({data, accion}) =>{  //lista de productos en modificar y eliminar  \r\n        let vista =''\r\n        accion ==='modificar'?\r\n            vista='administrador_vistaModificar'\r\n        :\r\n            vista='administrador_vistaEliminar'\r\n        \r\n        return(  \r\n            \r\n                <div className={vista} onClick={() => handleModal(data, accion)}>\r\n                    <div className='administrador_contenedor_foto  '>\r\n                        <img src={data.foto} alt=\"Imagen de producto\" className='adminstrador_fotos_modificar' />\r\n                    </div>\r\n                    \r\n                    <div className='administrador_detalles'>\r\n                        <p className='administrador_nombre'>{data.titulo}</p> \r\n                        <p className='administrador_descripcion'>{data.descripcion}</p>\r\n                        <p className='administrador_descripcion'>{data.clave}</p>\r\n                        <p className='administrador_descripcion'>{data.precio}</p>                                             \r\n                    </div>                     \r\n                </div>                 \r\n                \r\n        )\r\n     }\r\n\r\n    const vistaModificar = (\r\n        <div>            \r\n            <div style={{display:'flex', justifyContent:'flex-end',alignItems:'flex-end',height:120}}>         \r\n                    <SearchIcon fontSize=\"large\" />\r\n                    <input type='search' className='administrador_inputBuscar'  onChange={(text) => filtrarProductos(text.target.value)}></input>                    \r\n                    <Button style={{background:'#282c34',color:'white', marginRight:30}}\r\n                    onClick={() => setAccion('menu')}>Menu</Button>         \r\n            </div>\r\n\r\n            <div className=\"administrador_lista\">                          \r\n                \r\n                {carga ?  productosFiltrados.map((item,index) => \r\n                            <div className='administrador_orange'>\r\n                                <MostrarProductos data={item} accion='modificar' key={index}/>\r\n                                <p className='administrador_agregarFoto' onClick={()=>  handleModal(item, 'agregar fotos')}>+ Fotos</p>                                \r\n                            </div>\r\n                        )\r\n                        : null\r\n                    }           \r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const vistaEliminar = (\r\n        <div>\r\n             <div style={{display:'flex', justifyContent:'flex-end',alignItems:'flex-end',height:120}}>         \r\n                <SearchIcon fontSize=\"large\" />\r\n                <input type='search' className='administrador_inputBuscar'  onChange={(text) => filtrarProductos(text.target.value)}></input>                    \r\n                <Button style={{background:'#282c34',color:'white', marginRight:30}}\r\n                onClick={() => setAccion('menu')}>Menu</Button>         \r\n            </div>\r\n            <div className=\"administrador_lista\">                          \r\n                {carga ?  productosFiltrados.map((product,index) => <MostrarProductos data={product} accion='eliminar' key={index}/>)\r\n                        : null\r\n                    }           \r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const vistaCarrusel = (\r\n        <div className='administrador_vistaagregar'>  \r\n            <img src={carrusel_svg} alt=\"add\" style={{marginTop:100}} className='administrador_img '/>           \r\n            <div className='administrador_vistamenu administrador_tamañoMenu'>\r\n                <p style={{fontSize:30}}> Agregar foto al carrusel</p>\r\n                <div className='administrador_separacion'>                                    \r\n                    <textarea placeholder='Direcion del banner' id='direccion_banner'  className='administrador_input'  onChange={(text) => SetCarrusel({...carrusel,direccion:text.target.value})} value={carrusel.direccion}>  </textarea>\r\n                    <input placeholder='Nombre del banner' id='nombre_banner'  className='administrador_input' onChange={(text) => SetCarrusel({...carrusel,nombre:text.target.value})} value={carrusel.nombre} />    \r\n                </div>            \r\n\r\n                <div >\r\n                    <Button style={{background:'grey',color:'white',marginRight:10}}\r\n                    onClick={() => setAccion('menu')}>Menu</Button>\r\n                        \r\n                    <Button style={{background:'blue',color:'white'}} \r\n                    onClick= {() => agregarCarrusel()}>Aceptar</Button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"administrador_lista fila\">                          \r\n                <p style={{fontSize:50}}>Lista de fotos del carrusel</p>\r\n                <div>\r\n                    {carga ?  listaCarrusel.map((data) => \r\n                                                <div className='administrador_listaCarrusel' key={data.nombre}>\r\n                                                    <img src={data.direccion} alt={data.nombre} />\r\n                                                    <div className='fila centrar'>\r\n                                                        <p style={{fontSize:30}}>{data.nombre}</p>\r\n                                                        <Button style={{background:'#ee5253',color:'white',width:280}}\r\n                                                                onClick={async() => {\r\n                                                                                    await eliminarCarrusel(data.nombre)                                                                                                \r\n                                                                                    descargaCarrusel()\r\n                                                                                }\r\n                                                                    }>Eliminar\r\n                                                        </Button>                                                             \r\n                                                    </div>\r\n                                                </div>)\r\n                            : null\r\n                        }           \r\n                </div>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n\r\n    const seleccion = () => {\r\n        switch (accion){\r\n            case 'agregar':return(vistaAgregar)\r\n\r\n            case 'modificar': return (vistaModificar)\r\n\r\n            case 'eliminar': return (vistaEliminar)\r\n\r\n            case 'carrusel': return(vistaCarrusel)\r\n\r\n            default: return(vistaMenu)\r\n        }\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"administrador_portada\" >              \r\n            { openDialog ? <Dialog \r\n                                accion={setOpenDialog}  // abre y cierra el dialog\r\n                                actualizarLista={descargarProductos} //despues de modificar/eliminar se debe actualizar la lista\r\n                                titulo={actualizarProducto.titulo} // titulo que se vera en el modal\r\n                                cuerpo={actualizarProducto.data} //contenido del modal\r\n                            /> \r\n                : \r\n                    null\r\n            }\r\n            \r\n                \r\n            {seleccion(accion)}  {/* lo que vemos en pantalla */}         \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Administrador","E:\\07R45\\otros\\React\\React\\mysilver\\src\\components\\listaProductos.js",[],"E:\\07R45\\otros\\React\\React\\mysilver\\src\\components\\administrador.jsx",["127","128"],"E:\\07R45\\otros\\React\\React\\mysilver\\src\\components\\navbar\\navbar.jsx",[],"E:\\07R45\\otros\\React\\React\\mysilver\\src\\components\\firebase\\conexionFirestore.js",[],"E:\\07R45\\otros\\React\\React\\mysilver\\src\\components\\firebase\\configFirestore.js",[],"E:\\07R45\\otros\\React\\React\\mysilver\\src\\components\\modal.js",[],"E:\\07R45\\otros\\React\\React\\mysilver\\src\\components\\dialog.js",["129"],"D:\\Programacion\\React\\mysilverstore\\src\\components\\dialog.js",["130"],"import React,{useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Dialog, DialogTitle} from '@material-ui/core';\r\nimport {crearUsuarioMail, iniciarUsuarioMail, iniciarGoogle, iniciarFacebook, subirNube, eliminarElemento} from './firebase/conexionFirestore'\r\n\r\n\r\nfunction SimpleDialog(props) {\r\n  const { onClose, open, titulo, cuerpo, actualizarLista } = props; \r\n  const [mail,setMail] = React.useState({email:'', password:'', repassword:''})//Crear usuario con mail\r\n  const [articulo, setArticulo] = React.useState(cuerpo) // recibe los datos del articulo para modificar/eliminar\r\n  const [indexMiniatura, setIndexMiniatura] = React.useState(cuerpo.index) // manipula el indice de las miniaturas para poder cambiarlas \r\n  const [fullDialog, setFullDialog] = React.useState(false) //hacer mas grande el dialog\r\n\r\n  useEffect(()=>{    \r\n    if(titulo === 'miniatura')\r\n     setFullDialog(true) \r\n },[])\r\n \r\n  const handleDialog = () =>{\r\n    onClose(false)\r\n  }\r\n\r\n  const handleArticulo = (dato) =>{  //modificar articulo          \r\n    setArticulo({...articulo,...dato})        \r\n  }  \r\n\r\n  const handlefotos = (fotos) =>{        \r\n    setArticulo({...articulo,fotos:{...fotos}})\r\n  }\r\n  \r\n  const handleEmail = (dato) =>{ //crear usuario o iniciar sesion con mail\r\n    setMail({...mail,...dato})\r\n  }  \r\n\r\n  const handleGoogle = () =>{\r\n    iniciarGoogle(handleDialog)\r\n  }\r\n\r\n  const handleFacebook = () =>{\r\n    iniciarFacebook(handleDialog)\r\n  }\r\n\r\n  const siguienteMiniatura = () => {\r\n    if (indexMiniatura + 1 < cuerpo.array.length )\r\n      setIndexMiniatura(indexMiniatura+1)    \r\n  }\r\n\r\n  const anteriorMiniatura = () => {\r\n    if (indexMiniatura + 1 > 1 )\r\n      setIndexMiniatura(indexMiniatura-1)\r\n  }\r\n\r\n \r\n\r\n  return (\r\n    <Dialog onClose={() => onClose(false)} aria-labelledby=\"simple-dialog-title\" open={open} maxWidth='xl' fullWidth={fullDialog}>\r\n      \r\n      {titulo !== 'miniatura' ?  // no quiero que diga miniatura el encabezado\r\n        < DialogTitle id=\"simple-dialog-title\"  >{titulo}</DialogTitle>                   \r\n     : \r\n        null\r\n      }\r\n      \r\n\r\n      <div className='dialog_ancho'>\r\n      { titulo ==='modificar' ?\r\n            <>                  \r\n            <input placeholder='titulo' value={articulo.titulo} id='titulo' type='text' className='modal_input' onChange={(text) => handleArticulo({titulo:text.target.value})}></input>\r\n            <textarea placeholder='descripcion' value={articulo.descripcion} id='descripcion' type='text' className='modal_input' onChange={(text) => handleArticulo({descripcion:text.target.value})}></textarea>\r\n            <input placeholder='precio' id='precio' value={articulo.precio} type='text' className='modal_input' onChange={(text) => handleArticulo({precio:text.target.value})}></input>\r\n            <textarea placeholder='foto' id='foto' value={articulo.foto} type='text' className='modal_input' onChange={(text) => handleArticulo({foto:text.target.value})}></textarea>\r\n\r\n            <div align='right' >\r\n              <Button style={{background:'grey',color:'white',marginRight:10}}\r\n              onClick={() => handleDialog()} >Cerrar</Button>\r\n                      \r\n              <Button style={{background:'blue',color:'white'}} \r\n              onClick={() => {\r\n                subirNube([articulo])\r\n                actualizarLista('')\r\n                handleDialog()                \r\n                }\r\n              } >Aceptar</Button>\r\n              </div>\r\n          </>\r\n        :null        \r\n      }\r\n\r\n      { titulo ==='agregar fotos' ?\r\n          <>                                               \r\n            <textarea placeholder='Foto 1' value={articulo.fotos ? articulo.fotos.uno : null} type='text' className='modal_input' onChange={(text) => handlefotos({...articulo.fotos,uno:text.target.value})}></textarea>\r\n            <textarea placeholder='Foto 2' value={articulo.fotos ? articulo.fotos.dos : null} type='text' className='modal_input' onChange={(text) => handlefotos({...articulo.fotos, dos:text.target.value})}></textarea>            \r\n            <textarea placeholder='Foto 3' value={articulo.fotos ? articulo.fotos.tres : null} type='text' className='modal_input' onChange={(text) => handlefotos({...articulo.fotos, tres:text.target.value})}></textarea>            \r\n            <textarea placeholder='Foto 4' value={articulo.fotos ? articulo.fotos.cuatro : null} type='text' className='modal_input' onChange={(text) => handlefotos({...articulo.fotos, cuatro:text.target.value})}></textarea>            \r\n            <textarea placeholder='Foto 5' value={articulo.fotos ? articulo.fotos.cinco : null} type='text' className='modal_input' onChange={(text) => handlefotos({...articulo.fotos, cinco:text.target.value})}></textarea>            \r\n            <textarea placeholder='Foto 6' value={articulo.fotos ? articulo.fotos.seis : null} type='text' className='modal_input' onChange={(text) => handlefotos({...articulo.fotos, seis:text.target.value})}></textarea>            \r\n            <textarea placeholder='Foto 7' value={articulo.fotos ? articulo.fotos.siete : null} type='text' className='modal_input' onChange={(text) => handlefotos({...articulo.fotos, siete:text.target.value})}></textarea>            \r\n            <textarea placeholder='Foto 8' value={articulo.fotos ? articulo.fotos.ocho : null} type='text' className='modal_input' onChange={(text) => handlefotos({...articulo.fotos, ocho:text.target.value})}></textarea>            \r\n            <textarea placeholder='Foto 9' value={articulo.fotos ? articulo.fotos.nueve : null} type='text' className='modal_input' onChange={(text) => handlefotos({...articulo.fotos, nueve:text.target.value})}></textarea>            \r\n            <textarea placeholder='Foto 10' value={articulo.fotos ? articulo.fotos.diez : null} type='text' className='modal_input' onChange={(text) => handlefotos({...articulo.fotos, diez:text.target.value})}></textarea>            \r\n            \r\n            <div align='right' >\r\n              <Button style={{background:'grey',color:'white',marginRight:10}}\r\n              onClick={() => handleDialog()} >Cerrar</Button>\r\n                      \r\n              <Button style={{background:'blue',color:'white'}} \r\n              onClick={() => {\r\n                subirNube([articulo])\r\n                actualizarLista('')\r\n                handleDialog()                \r\n                }\r\n              } >Aceptar</Button>\r\n            </div>\r\n          </>\r\n        :null        \r\n      }\r\n\r\n      { titulo ==='eliminar' ?\r\n            <>                  \r\n\r\n            <h3>¿Estas seguro de eliminar {articulo.titulo}?</h3>\r\n            \r\n            <div align='right' >\r\n              <Button style={{background:'grey',color:'white',marginRight:10}}\r\n              onClick={() => handleDialog()} >No, cancelar</Button>\r\n                      \r\n              <Button style={{background:'blue',color:'white'}} \r\n              onClick={() => {\r\n                eliminarElemento(articulo)\r\n                actualizarLista('')\r\n                handleDialog()\r\n                }\r\n              } >Si joven</Button>\r\n              </div>\r\n          </>\r\n        :null        \r\n      }\r\n\r\n      {titulo ==='Iniciar sesion' ?  \r\n          <>\r\n            <input placeholder='E-mail' id='email' type='mail' className='modal_input' onChange={(email) => handleEmail({email:email.target.value})}></input>\r\n            <input placeholder='Password' id='password' type='password' className='modal_input' onChange={(password) =>handleEmail({password:password.target.value})}></input>\r\n\r\n            <div align='right' >\r\n              <Button style={{background:'grey',color:'white',marginRight:10}}\r\n              onClick={() => handleDialog()} >Cerrar</Button>\r\n                    \r\n              <Button style={{background:'blue',color:'white'}} \r\n              onClick={() => iniciarUsuarioMail(mail.email, mail.password, handleDialog)} >Aceptar</Button>\r\n              </div>\r\n\r\n            <div style={{marginTop:30,marginBottom:15}}>\r\n              <Button className=\"modal_boton\" style={{background:'#005fcb',color:'white',marginRight:10}}\r\n              onClick={() => handleGoogle()}>Google</Button>\r\n            </div>\r\n            <div>\r\n              <Button className=\"modal_boton\" style={{background:'#398bff',color:'white',marginRight:10}}\r\n              onClick={() => handleFacebook()}>Facebook</Button>\r\n            </div>\r\n          </>\r\n          :null\r\n      }\r\n\r\n      {titulo === 'Crea tu cuenta'?\r\n            <>\r\n              \r\n              <input placeholder='E-mail' id='email' type='mail' className='modal_input' onChange={(email) => handleEmail({email:email.target.value})}></input>\r\n              <input placeholder='Password' id='password' type='password' className='modal_input' onChange={(password) => handleEmail({password:password.target.value})}></input>\r\n              <input placeholder='Repetir password' id='repassword' type='password' className='modal_input' onChange={(password) => handleEmail({repassword:password.target.value})}></input>\r\n\r\n              <div align='right' >\r\n                <Button style={{background:'grey',color:'white',marginRight:10}}\r\n                onClick={() => handleDialog()} >Cerrar</Button>\r\n                       \r\n                <Button style={{background:'blue',color:'white'}} \r\n                onClick={() => crearUsuarioMail(mail.email,mail.password, mail.repassword, handleDialog)} >Aceptar</Button>\r\n               </div>\r\n            </>\r\n            :null\r\n\r\n      }     \r\n\r\n      {titulo === 'miniatura'?\r\n            <>                                     \r\n                <div align='right'  >\r\n                    <Button style={{color:'grey'}}\r\n                    onClick={() => handleDialog()} >X</Button>\r\n                </div>\r\n               \r\n                <div className='centrar'>                  \r\n                   <p>{indexMiniatura + 1} de {cuerpo.array.length} </p>\r\n                </div>\r\n\r\n                <div className='fila centrar ' >                                      \r\n                    <Button style={{color:'grey',height:'150px'}} onClick={() => anteriorMiniatura()} >-</Button>\r\n                   \r\n                    <img src={cuerpo.array[indexMiniatura]} className='producto_vistaMiniatura' alt=\"Imagen de la minuatura\"/>\r\n\r\n                    <Button style={{color:'grey',height:'150px'}} onClick={() => siguienteMiniatura()} >+</Button>                                        \r\n                </div>\r\n            </>\r\n            :null\r\n      } \r\n\r\n        { titulo ==='compra' ?\r\n            <>    \r\n            <h2>Transferencia electronica</h2>              \r\n            <p>datos datos y mas datos</p>\r\n            <hr></hr>\r\n            <h2 style={{marginTop:30}}>Deposito bancario</h2>              \r\n            <p>datos datos y mas datos</p>\r\n            <hr></hr>\r\n            <h2 style={{marginTop:30}}>Codigo Mysilverstore</h2>              \r\n            <input placeholder='Codigo' type='text' className='modal_input' /* onChange={(text) => handleArticulo({titulo:text.target.value})} */></input>\r\n\r\n            \r\n\r\n            <div align='right' style={{marginTop:30}} >\r\n              <Button style={{background:'grey',color:'white',marginRight:10}}\r\n              onClick={() => handleDialog()} >Cerrar</Button>\r\n                      \r\n              <Button style={{background:'blue',color:'white'}} \r\n              onClick={() => {                \r\n                console.log('ya es tuyo')\r\n                handleDialog()                \r\n                }\r\n              } >Aceptar</Button>\r\n              </div>\r\n          </>\r\n        :null        \r\n      }   \r\n      </div>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default function SimpleDialogDemo({accion, titulo, cuerpo, actualizarLista}) {    \r\n\r\n  return (\r\n    <div>                  \r\n      <SimpleDialog open={true} onClose={accion} titulo={titulo} cuerpo={cuerpo} actualizarLista={actualizarLista}/>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Programacion\\React\\mysilverstore\\src\\components\\carrusel\\SliderData.js",[],"D:\\Programacion\\React\\mysilverstore\\src\\components\\carrusel\\ImageSlider.js",["131"],"import React, { useEffect, useState } from 'react';\r\n//import { SliderData } from './SliderData';//fotos estaticas\r\nimport {descargarCarrusel} from '../firebase/conexionFirestore'\r\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa';\r\n\r\nfunction ImageSlider ({ slides }) {\r\n  const [current, setCurrent] = useState(0);\r\n  const [next, setNext] = useState(0); //carrusel automatico  \r\n  const [carrusel, setCarrusel] = useState()\r\n  const [carga, setCarga] = useState(false)\r\n  const [length, setLength] = useState()\r\n\r\n  useEffect(() =>{\r\n    descargaCarrusel()\r\n  },[])\r\n\r\n // carrusel automatico\r\n  useEffect(()=>{            \r\n      myTimer()\r\n  },[next])\r\n\r\n  // tiempo del carrusel automatico\r\n  function myTimer() {  \r\n    setTimeout(() => {        \r\n      setCurrent( current => current === length - 1 ? 0 : current + 1);      \r\n      setNext(next  > 10 ? 0 : next+1) // bandera de cambio de imagen, cuando sea mayor a 10 regresa a 0 para que no haga numeros grandes\r\n  }, 5000);  \r\n  } \r\n  \r\n  const descargaCarrusel = async()=>{\r\n    let resul = await descargarCarrusel()\r\n    setCarrusel(resul)   \r\n    setLength(resul.length)\r\n    setCarga(true)\r\n\r\n  }\r\n\r\n  const nextSlide = () => {\r\n    setCurrent(current => current === length - 1 ? 0 : current + 1);    \r\n  };\r\n\r\n  const prevSlide = () => {\r\n    setCurrent(current => current === 0 ? length - 1 : current - 1);\r\n  };  \r\n\r\n  \r\n\r\n  if (!Array.isArray(carrusel) || carrusel.length <= 0) {\r\n    return null;\r\n  }\r\n  \r\n \r\n  \r\n  \r\n\r\n  return (    \r\n    <section className='slider'>      \r\n    {carga ?\r\n      <>\r\n        <FaArrowAltCircleLeft className='left-arrow' onClick={prevSlide} />\r\n        <FaArrowAltCircleRight className='right-arrow' onClick={nextSlide} />\r\n      </>\r\n      :null\r\n    }\r\n      \r\n      {carga ? carrusel.map((slide, index) => {\r\n        return (\r\n          <div\r\n            className={index === current ? 'slide active' : 'slide'}\r\n            key={index}\r\n          >\r\n            {index === current && (              \r\n                <img src={slide.direccion} alt={slide.nombre} className='image' />\r\n              \r\n            )}\r\n          </div>\r\n        );\r\n      })\r\n        :null\r\n      }\r\n   \r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ImageSlider;","E:\\07R45\\otros\\React\\React\\mysilver\\src\\components\\carrusel\\SliderData.js",[],"E:\\07R45\\otros\\React\\React\\mysilver\\src\\components\\carrusel\\ImageSlider.js",["132","133"],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":3,"column":17,"nodeType":"140","messageId":"141","endLine":3,"endColumn":23},{"ruleId":"134","replacedBy":"142"},{"ruleId":"136","replacedBy":"143"},{"ruleId":"134","replacedBy":"144"},{"ruleId":"136","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":104,"column":13,"nodeType":"148","endLine":104,"endColumn":34},{"ruleId":"146","severity":1,"message":"149","line":105,"column":13,"nodeType":"148","endLine":105,"endColumn":33},{"ruleId":"146","severity":1,"message":"147","line":104,"column":13,"nodeType":"148","endLine":104,"endColumn":34},{"ruleId":"146","severity":1,"message":"149","line":105,"column":13,"nodeType":"148","endLine":105,"endColumn":33},{"ruleId":"150","severity":1,"message":"151","line":17,"column":4,"nodeType":"152","endLine":17,"endColumn":6,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"151","line":17,"column":4,"nodeType":"152","endLine":17,"endColumn":6,"suggestions":"154"},{"ruleId":"150","severity":1,"message":"155","line":20,"column":5,"nodeType":"152","endLine":20,"endColumn":11,"suggestions":"156"},{"ruleId":"150","severity":1,"message":"155","line":13,"column":5,"nodeType":"152","endLine":13,"endColumn":11,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":52,"column":17,"nodeType":"148","endLine":52,"endColumn":79},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'AppBar' is defined but never used.","Identifier","unusedVar",["160"],["161"],["160"],["161"],"react/jsx-pascal-case","Imported JSX component Acciones_articulos must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Acciones_carrusel must be in PascalCase or SCREAMING_SNAKE_CASE","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'titulo'. Either include it or remove the dependency array.","ArrayExpression",["162"],["163"],"React Hook useEffect has a missing dependency: 'myTimer'. Either include it or remove the dependency array.",["164"],["165"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},{"desc":"166","fix":"168"},{"desc":"169","fix":"170"},{"desc":"169","fix":"171"},"Update the dependencies array to be: [titulo]",{"range":"172","text":"173"},{"range":"174","text":"173"},"Update the dependencies array to be: [myTimer, next]",{"range":"175","text":"176"},{"range":"177","text":"176"},[930,932],"[titulo]",[930,932],[676,682],"[myTimer, next]",[435,441]]